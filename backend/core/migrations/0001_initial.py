# Generated by Django 4.2 on 2025-08-26 06:58

import autoslug.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BaseModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Organizations',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.basemodel')),
                ('name', models.CharField(max_length=100)),
                ('contact_email', models.EmailField(max_length=254)),
                ('slug', autoslug.fields.AutoSlugField(blank=True, editable=False, populate_from='get_org_slug', unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
            bases=('core.basemodel',),
        ),
        migrations.CreateModel(
            name='Projects',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.basemodel')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('COMPLETED', 'Completed'), ('ON_HOLD', 'On Hold')], default='ACTIVE', max_length=20)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('slug', autoslug.fields.AutoSlugField(blank=True, editable=False, populate_from='get_project_slug', unique=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='core.organizations')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('organization', 'name')},
            },
            bases=('core.basemodel',),
        ),
        migrations.CreateModel(
            name='Tasks',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.basemodel')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('TODO', 'To Do'), ('IN_PROGRESS', 'In Progress'), ('DONE', 'Done')], default='TODO', max_length=20)),
                ('assignee_email', models.EmailField(blank=True, max_length=254)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='get_task_slug')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='core.projects')),
            ],
            options={
                'ordering': ['-created_at'],
            },
            bases=('core.basemodel',),
        ),
        migrations.CreateModel(
            name='TaskComment',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.basemodel')),
                ('content', models.TextField()),
                ('author_email', models.EmailField(max_length=254)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='core.tasks')),
            ],
            options={
                'ordering': ['-created_at'],
            },
            bases=('core.basemodel',),
        ),
    ]
